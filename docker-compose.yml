version: '3.8'
services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: n11-db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - postgre_n11_db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"

  companyservice:
    build:
      context: ./CompanyService
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - solr

  customerreviewservice:
    build:
      context: ./CustomerReviewService
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  solr:
    image: solr:latest
    container_name: n11_solr
    ports:
      - "8983:8983"
    volumes:
      - ./solrdata:/var/solr
    command:
      - solr-precreate
      - company

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CREATE_TOPICS=logTopic:1:1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://host.docker.internal:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  logservice:
    build:
      context: ./LogService
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - kafka
      
  frontend:
    build: ./customer-service-frontend
    ports:
      - "3000:80"
    depends_on:
      - postgres
      - companyservice
      - customerreviewservice

volumes:
  postgre_n11_db:
    driver: local
  solrdata:
